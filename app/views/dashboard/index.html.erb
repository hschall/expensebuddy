<% hour = Time.zone.now.hour %>
<% saludo =
     if hour < 12
       "Buenos d√≠as"
     elsif hour < 19
       "Buenas tardes"
     else
       "Buenas noches"
     end %>

<!-- Greeting and Divider -->
<div class="dashboard-header">
  <% user_name = current_user.setting&.nombre.presence || current_user.email.split('@').first.capitalize %>
<div class="greeting"><%= "#{saludo}, #{user_name}!" %></div>
  <div class="greeting-date">
    <%= I18n.l(Time.zone.today, format: :custom, locale: :es) %>
  </div>

  <%= button_to "Generar saldos a favor", generate_saldo_histories_path, method: :post, class: "btn-custom-primary-sm", data: { turbo_confirm: "¬øEst√°s seguro? Esto recalcular√° todos los saldos a favor." } %>

  <div class="dashboard-divider"></div>
</div>


<div class="container my-4">
  <!-- üîç Filters -->
  <%= form_with url: dashboard_path, method: :get, local: true, class: "row g-3 align-items-end mb-4" do %>
    <div class="col-md-3">
      <%= select_tag :cycle_month,
        options_for_select((0..11).map { |i|
          date = Date.today.beginning_of_month - i.months
          ["#{I18n.l(date, format: "%B %Y", locale: :es).capitalize}", date.strftime("%Y-%m")]
        }, selected: params[:cycle_month]),
        prompt: "Periodo de tarjeta",
        class: "form-select",
        onchange: "this.form.submit()" %>
    </div>

    <div class="col-md-3">
        <%= select_tag :person,
          options_for_select(
            ["Todos"] + current_user.transactions.distinct.pluck(:person).compact.uniq,
            selected: params[:person].presence || "Todos"
          ),
          class: "form-select",
          onchange: "this.form.submit()" %>
      </div>

  <% end %>

  <!-- üí≥ Summary Cards -->
<div class="row text-left mb-4">
  <div class="col-md-3">
    <div class="card h-100">
      <div class="card-body">
        <h6 class="text-muted">Total a Pagar</h6>
        <h3 class="fw-bold"><%= number_to_currency(@total_final) %></h3>
        <small class="text-muted" style="font-size: 0.75rem;"><%= @formatted_cycle_range %></small>
      </div>
    </div>
  </div>
  <div class="col-md-3">
    <div class="card h-100">
      <div class="card-body">
        <h6 class="text-muted">Gastos Totales</h6>
        <h3 class="fw-bold"><%= number_to_currency(@total_positive_amount) %></h3>
      </div>
    </div>
  </div>
  <div class="col-md-3">
    <div class="card h-100">
      <div class="card-body">
        <h6 class="text-muted">Reembolsos + Saldo a favor</h6>
        <h3 class="fw-bold"><%= number_to_currency(@total_negative_amount.abs-@saldo_a_favor) %></h3>
        <small class="text-muted" style="font-size: 0.65rem;">Saldo a favor disponible a partir de la fecha de corte</small>
      </div>
    </div>
  </div>

  <div class="col-md-3">
    <div class="card h-100">
      <div class="card-body">
        <h6 class="text-muted">Fecha Limite de Pago</h6>
        <h3 class="fw-bold">
          <%= l(@payment_due_date, format: "%d %B", locale: :es) if @payment_due_date %>
        </h3>
        <small class="text-muted" style="font-size: 0.75rem;">Basado en el periodo seleccionado</small>
      </div>
    </div>
  </div>
</div>

<!-- üìä Chart + Category Summary -->
<div class="row mb-4">
  <!-- Monthly Expenses Chart -->
<div class="col-md-8">
  <div class="card h-100">
    <div class="container header py-2">
      <h6 class="mb-0">Gasto Mensual</h6>
    </div>
    <div class="card-body" style="height: 380px;">
      <div class="h-100 w-100 d-flex align-items-center justify-content-center">
        <canvas id="monthlyExpensesChart" class="w-100 h-100"></canvas>
      </div>
    </div>
  </div>
</div>


  <!-- Category Summary Table -->
<div class="col-md-4">
  <div class="container card h-100">
    <div class="container header py-2">
      <h6 class="mb-0">Resumen por Categor√≠a</h6>
    </div>
    <div class="card-body p-0">
      <div style="height: 380px; overflow-y: auto;">
        <table class="table table-sm table-hover text-center align-middle mb-0 table-bordered-custom" id="category-summary-table" style="font-size: 0.75rem;">
          <thead class="sticky-top" style="top: 0; background-color: white; z-index: 1;">
            <tr>
              <th style="width: 20%;">Categor√≠a</th>
              <th style="width: 60%;">%</th>
              <th style="width: 20%;">Total</th>
            </tr>
          </thead>
          <tbody class="table-group-divider">
            <% total = @category_sorted_data.values.sum.to_f %>
            <% @category_sorted_data.each do |category, amount| %>
              <% percentage = ((amount / total) * 100).round(1) %>
              <tr data-category="<%= category.to_s.strip.downcase %>" style="cursor: pointer; height: 49px;">
                <td style="width: 35%;"><%= category %></td>
                <td style="width: 30%;">
                  <div class="d-flex align-items-center gap-1">
                    <span style="font-size: 0.7rem; width: 50%; text-align: right;"><%= percentage %> %</span>
                    <div class="progress w-100" style="height: 8px;">
                      <div class="progress-bar bg-info" role="progressbar"
                           style="width: <%= percentage %>%;" aria-valuenow="<%= percentage %>" aria-valuemin="0" aria-valuemax="100"></div>
                    </div>
                  </div>
                </td>
                <td style="width: 20%;"><%= number_to_currency(amount) %></td>
              </tr>
            <% end %>
          </tbody>
        </table>
      </div>
    </div>
  </div>
</div>

<div></br></div>

<!-- üìã Recent Transactions Table -->
<div class="row mb-4">
  <div class="col-md-12">
    <div class="text-end mb-2">
      <button class="btn-custom-primary-sm" id="clear-category-filter">Quitar filtro</button>
    </div>

    <div class="container card h-100" style="width: 102%; max-width: 1800px; margin: 0 auto; font-size: 0.75rem;">

      <div class=" header py-2">
        <h6 class="mb-0">Transacciones Recientes</h6>
      </div>
      <div class="card-body table-responsive p-0">
       <table class="table table-sm table-hover text-center align-middle mb-0 table-bordered-custom">
          <thead class="sticky-top">
            <tr>
              <th>Fecha</th>
              <th>Descripci√≥n</th>
              <th>Monto</th>
              <th>Persona</th>
              <th>Categor√≠a</th>
            </tr>
          </thead>
          <tbody class="table-group-divider" id="recent-transactions">
            <% @transactions.each do |tx| %>
              <tr data-category="<%= tx.category&.name.to_s.strip.downcase %>" style="height: 40px;">
                <td><%= l(tx.date, format: :short) %></td>
                <td><%= tx.description %></td>
                <td><%= number_to_currency(tx.amount) %></td>
                <td><%= tx.person %></td>
                <td><%= tx.category&.name || "Sin categor√≠a" %></td>
              </tr>
            <% end %>
          </tbody>
        </table>
      </div>
    </div>
  </div>
</div>



<script>
  document.addEventListener("DOMContentLoaded", function () {
    const summaryTable = document.getElementById("category-summary-table");
    const transactionsTable = document.getElementById("recent-transactions");

    // Validate existence
    if (!summaryTable || !transactionsTable) return;

    const rows = summaryTable.querySelectorAll("tbody tr");
    const transactions = transactionsTable.querySelectorAll("tr");

    rows.forEach(row => {
      row.addEventListener("click", () => {
        const selectedCategory = row.dataset.category;

        // Highlight selected row
        rows.forEach(r => r.classList.remove("table-primary"));
        row.classList.add("table-primary");

        // Filter transactions by category
        transactions.forEach(tx => {
          const txCategory = tx.dataset.category;
          tx.style.display = (txCategory === selectedCategory) ? "" : "none";
        });
      });
    });

    // Clear filter
    const clearBtn = document.getElementById("clear-category-filter");
    if (clearBtn) {
      clearBtn.addEventListener("click", () => {
        rows.forEach(r => r.classList.remove("table-primary"));
        transactions.forEach(tx => tx.style.display = "");
      });
    }
  });
</script>



<canvas id="monthlyExpensesChart"></canvas>
<script>
  document.addEventListener("DOMContentLoaded", function () {
    const ctx = document.getElementById("monthlyExpensesChart").getContext("2d");
    new Chart(ctx, {
      type: 'bar',
      data: {
        labels: <%= raw @monthly_labels.to_json %>,
        datasets: [{
          label: 'Gasto Mensual',
          data: <%= raw @monthly_expenses.to_json %>,
          backgroundColor: 'rgba(54, 162, 235, 0.5)',
          borderColor: 'rgba(54, 162, 235, 1)',
          borderWidth: 1
        }]
      },
      options: {
        responsive: true,
        scales: {
          y: { beginAtZero: true }
        }
      }
    });
  });
</script>


