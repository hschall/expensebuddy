<div class="container mt-4">
  <h3>Pagos y Reembolsos a EDC</h3>

  <%= form_with url: balance_payments_path, method: :get, local: true, html: { id: "bp-filters-form" }, class: "row g-2 mb-3 align-items-end", data: { controller: "filters", filters_target: "form" } do %>
    <div class="col-3">
      <%= select_tag :cycle_month,
        options_for_select((0..11).map { |i| 
          date = Date.today.beginning_of_month - i.months
          [I18n.l(date, format: "%B %Y", locale: :es).capitalize, date.strftime("%Y-%m")]
        }, selected: params[:cycle_month]),
        prompt: "Periodo de tarjeta",
        class: "form-select",
        data: { action: "change->filters#applyCycleMonth" } %>
    </div>

    <div class="col">
      <%= select_tag :person,
          options_for_select(BalancePayment.distinct.pluck(:person).compact.sort, params[:person]),
          prompt: "Persona",
          class: "form-select" %>
    </div>

    <div class="col">
      <%= select_tag :category,
          options_for_select(BalancePayment.distinct.pluck(:category).compact.sort, params[:category]),
          prompt: "Categoría",
          class: "form-select" %>
    </div>

    <div class="col">
      <%= text_field_tag :description, params[:description], placeholder: "Buscar descripción...", class: "form-control" %>
    </div>

    <div class="col-auto">
      <button class="btn-custom-primary-sm" data-action="filters#applyManual">Filtrar</button>
      <button type="button" class="btn-custom-primary-sm" data-reset>Resetear</button>
    </div>
  <% end %>

  <%= form_with url: destroy_selected_balance_payments_path, method: :delete, data: { turbo_confirm: "¿Eliminar los pagos seleccionados?" }, local: true do %>
    <div class="d-flex justify-content-start mb-2">
      <%= submit_tag "Eliminar seleccionados", class: "btn-custom-danger-sm" %>
    </div>

    <%= turbo_frame_tag "balance_payments_table" do %>
      <%= render partial: "balance_payments/table", locals: { balance_payments: @balance_payments } %>
    <% end %>
  <% end %>
</div>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const selectAll = document.getElementById("select_all_checkbox");
    const checkboxes = document.querySelectorAll(".bp-checkbox");

    if (selectAll) {
      selectAll.addEventListener("change", () => {
        checkboxes.forEach(cb => cb.checked = selectAll.checked);
      });
    }
  });
</script>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const resetButton = document.querySelector("#bp-filters-form button[data-reset]");
    if (!resetButton) return;

    resetButton.addEventListener("click", (e) => {
      e.preventDefault(); // prevent default form submission

      const form = document.getElementById("bp-filters-form");

      // Clear all inputs
      form.querySelector("select[name='person']").value = "";
      form.querySelector("select[name='category']").value = "";
      form.querySelector("input[name='description']").value = "";
      form.querySelector("select[name='cycle_month']").value = "";

      // Submit form (simulates a fresh GET request with cleared params)
      form.submit();
    });
  });
</script>

